<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>request header on Hecklers in Development</title>
    <link>https://thehecklers.com/tags/request-header/</link>
    <description>Recent content in request header on Hecklers in Development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 08 Jun 2017 20:37:31 -0600</lastBuildDate><atom:link href="https://thehecklers.com/tags/request-header/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>T4SD (Tips 4 Spring Devs): Request header filtering in @RequestMapping</title>
      <link>https://thehecklers.com/posts/t4sd-tips-4-spring-devs-request-header-filtering-in-requestmapping/</link>
      <pubDate>Thu, 08 Jun 2017 20:37:31 -0600</pubDate>
      
      <guid>https://thehecklers.com/posts/t4sd-tips-4-spring-devs-request-header-filtering-in-requestmapping/</guid>
      <description>Just a quick tip for the Spring fans out there…​
I was leading a workshop yesterday and this question arose: Is it possible to filter requests by header content using Spring’s various request mapping (@RequestMapping, @GetMapping, @PostMapping, et al) annotations? Not only is it possible, it’s easy, and the implementation is concise &amp;amp; clean! Let’s take a look. The code Here is a simple example that filters based upon the content-type of the header:</description>
    </item>
    
  </channel>
</rss>
